package myPcg6;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;

public class Eval {

	public static void main(String[] args) {
		
		//java源代码
		String sourceStr = "public class Hello{"
				+ "public void sayhello(String name){"
				+ "System.put.println('hello'+name)"
				+ "}"
				+ "}";
		//类及文件名
		String className = "Hello";
		//方法名
		String methodName="sayhello";
		JavaCompiler cmp = ToolProvider.getSystemJavaCompiler();
		//java标准文件管理器
		StandardJavaFileManager fm = cmp.getStandardFileManager(null,null,null);
		//java文件对象
		JavaFileObject jfo = new StringJavaFileObject(className, sourceStr);
        // 编译参数，类似于javac <options> 中的options
        List<String> optionsList = new ArrayList<String>();
        // 编译文件的存放地方，注意：此处是为Eclipse工具特设的
        optionsList.addAll(Arrays.asList(new String[] { "-d", "./bin" }));
        // 要编译的单元
        List<JavaFileObject> jfos = Arrays.asList(new JavaFileObject[] { jfo });
        // 设置编译环境
        JavaCompiler.CompilationTask task = cmp.getTask(null, fm, null,
                optionsList, null, jfos);
        // 编译成功
        if (task.call()) {
            // 生成对象
            Object obj = Class.forName(className).newInstance();
            Class<? extends Object> cls = obj.getClass();
            // 调用sayHello方法
            Method m = cls.getMethod(methodName, String.class);
            // 第一个参数是执行该方法的主调，后面若干个参数是执行该方法时传入该方法的实参
            String str = (String) m.invoke(obj, "陈驰");
            System.out.println(str);
        }
    }
}
